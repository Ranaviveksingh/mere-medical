kind: pipeline
name: default
type: docker

clone:
  depth: 10

steps:
  - name: app-check-if-changed
    image: node
    commands:
      - npm ci
      - npx nx print-affected --type=app --select=projects --base=HEAD~1 --head=HEAD
      - npx nx print-affected --type=app --select=projects --base=HEAD~1 --head=HEAD | grep -q -E "api|web" || exit 78

  - name: app
    image: docker:dind
    environment:
      PASSWORD:
        from_secret: registry_password
    volumes:
      - name: dockersock
        path: /var/run
    commands:
      - sleep 5 # give docker enough time to start
      - echo $PASSWORD | docker login --username cfu288 --password-stdin
      - docker build -f Dockerfile -t cfu288/mere-medical .
      - docker push cfu288/mere-medical:latest
    depends_on:
      - app-check-if-changed

  - name: docs-check-if-changed
    image: node
    commands:
      - npm ci
      - npx nx print-affected --type=app --select=projects --base=HEAD~1 --head=HEAD
      - npx nx print-affected --type=app --select=projects --base=HEAD~1 --head=HEAD | grep -q -E "docs" || exit 78

  - name: docs
    image: docker:dind
    environment:
      PASSWORD:
        from_secret: registry_password
    volumes:
      - name: dockersock
        path: /var/run
    commands:
      - sleep 5 # give docker enough time to start
      - echo $PASSWORD | docker login --username cfu288 --password-stdin
      - docker build -f Dockerfile-docs -t cfu288/mere-medical-docs .
      - docker push cfu288/mere-medical-docs:latest
    depends_on:
      - docs-check-if-changed

  - name: parallelize builds
    image: docker:dind
    commands:
      - echo "Done"
    depends_on:
      - app
      - docs

services:
  - name: docker
    image: docker:dind
    privileged: true
    volumes:
      - name: dockersock
        path: /var/run

volumes:
  - name: dockersock
    temp: {}

trigger:
  branch:
    - main
